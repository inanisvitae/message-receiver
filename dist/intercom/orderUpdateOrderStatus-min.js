"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var _intercomClient=require("intercom-client"),_config=require("config"),_config2=_interopRequireDefault(_config),_pg=require("pg"),_pg2=_interopRequireDefault(_pg),_bunyan=require("bunyan"),_bunyan2=_interopRequireDefault(_bunyan),_publicConst=require("./publicConst");const log=_bunyan2.default.createLogger({name:"orderUpdateOrderStatus"}),client=new _intercomClient.Client(_config2.default.get("thirdPartyPlatform.intercom")),connPool=new _pg2.default.Pool(_config2.default.get("database.pg")),updateOrderStatus=e=>{e.assertQueue("ORDER:UPDATE_ORDER_STATUS",{durable:!0}),e.consume("ORDER:UPDATE_ORDER_STATUS",e=>{const t=JSON.parse(e.content),o=t.customer_id,r=`SELECT customer_id, guest_id, status, promoter_id, payment, id, deleted_at FROM public.order WHERE customer_id = ${o};`;if(o)connPool.query(r,[],(e,t)=>{if(e)log.info("Error connecting to pg");else{let e=0;const r=new Map;let n=0;const s={};t.rows.length>0?(t.rows.forEach(t=>{e+=Number.parseInt(t.payment,10);let o=`status_num_${t.status}`;"pending"===t.status&&t.deleted_at&&(o+="_deleted"),-1!==_publicConst.completedOrdersSignature.indexOf(t.status)&&(n+=1),r.has(o)?r.set(o,r.get(o)+1):r.set(o,1)}),[...r].forEach(e=>{s[e[0]]=e[1]}),s.num_orders=n,s.total_payment=e,client.users.update({user_id:o,custom_attributes:s}).catch(e=>{log.info(e)})):log.info("There is no corresponding customer_id or there is no order")}});else if(t.email){const e=`SELECT customer_id, guest_id, status, promoter_id, payment, id FROM public.order WHERE email = ${t.email};`;connPool.query(e,[],(e,o)=>{if(e)log.info("Error executing query");else{let e=0;const r=new Map;let n=0;const s={};o.rows.length>0?(o.rows.forEach(t=>{e+=Number.parseInt(t.payment,10);const o=`status_num_${t.status}`;-1!==_publicConst.completedOrdersSignature.indexOf(t.status)&&(n+=1),r.has(o)?r.set(o,r.get(o)+1):r.set(o,1)}),[...r].forEach(e=>{s[e[0]]=e[1]}),s.num_orders=n,s.total_payment=e,client.users.update({email:t.email,custom_attributes:s}).catch(e=>{log.info(e)})):log.info("There is no corresponding customer_id or there is no order")}})}},{noAck:!0})};exports.default=(e=>{e.assertQueue("ORDER:UPDATE_ORDER_STATUS",{durable:!0}),e.consume("ORDER:UPDATE_ORDER_STATUS",e=>{const t=JSON.parse(e.content),o=t.customer_id,r=`SELECT customer_id, guest_id, status, promoter_id, payment, id, deleted_at FROM public.order WHERE customer_id = ${o};`;if(o)connPool.query(r,[],(e,t)=>{if(e)log.info("Error connecting to pg");else{let e=0;const r=new Map;let n=0;const s={};t.rows.length>0?(t.rows.forEach(t=>{e+=Number.parseInt(t.payment,10);let o=`status_num_${t.status}`;"pending"===t.status&&t.deleted_at&&(o+="_deleted"),-1!==_publicConst.completedOrdersSignature.indexOf(t.status)&&(n+=1),r.has(o)?r.set(o,r.get(o)+1):r.set(o,1)}),[...r].forEach(e=>{s[e[0]]=e[1]}),s.num_orders=n,s.total_payment=e,client.users.update({user_id:o,custom_attributes:s}).catch(e=>{log.info(e)})):log.info("There is no corresponding customer_id or there is no order")}});else if(t.email){const e=`SELECT customer_id, guest_id, status, promoter_id, payment, id FROM public.order WHERE email = ${t.email};`;connPool.query(e,[],(e,o)=>{if(e)log.info("Error executing query");else{let e=0;const r=new Map;let n=0;const s={};o.rows.length>0?(o.rows.forEach(t=>{e+=Number.parseInt(t.payment,10);const o=`status_num_${t.status}`;-1!==_publicConst.completedOrdersSignature.indexOf(t.status)&&(n+=1),r.has(o)?r.set(o,r.get(o)+1):r.set(o,1)}),[...r].forEach(e=>{s[e[0]]=e[1]}),s.num_orders=n,s.total_payment=e,client.users.update({email:t.email,custom_attributes:s}).catch(e=>{log.info(e)})):log.info("There is no corresponding customer_id or there is no order")}})}},{noAck:!0})});